<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="e4dc1ec5-8c11-4b4c-9338-7b1add740a85" name="Mark@MACPC 2013-06-13 17:30:24" runUser="MacPc\Mark" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="f45b0aff-07a5-4726-a4ce-984b897c8a14">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="Mark_MACPC 2013-06-13 17_30_24" />
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2013-06-13T17:30:24.2642684+02:00" queuing="2013-06-13T17:30:24.7918484+02:00" start="2013-06-13T17:30:25.7063204+02:00" finish="2013-06-13T17:30:32.3040014+02:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="TestMethod3" storage="c:\sourcecode\ecohotels\ecohotels.core.tests\bin\release\ecohotels.core.tests.dll" id="ba44b44f-1145-95b8-e5be-2d6c54a44d9e">
      <Execution timeOut="1800000" id="3ef48edb-95b7-4c30-a6fd-b6d573ec961e" />
      <TestMethod codeBase="C:/SourceCode/EcoHotels/EcoHotels.Core.Tests/bin/Release/EcoHotels.Core.Tests.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="EcoHotels.Core.Tests.Integration.Services.SearchServiceTester, EcoHotels.Core.Tests, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="TestMethod3" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="ba44b44f-1145-95b8-e5be-2d6c54a44d9e" executionId="3ef48edb-95b7-4c30-a6fd-b6d573ec961e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="3ef48edb-95b7-4c30-a6fd-b6d573ec961e" testId="ba44b44f-1145-95b8-e5be-2d6c54a44d9e" testName="TestMethod3" computerName="MACPC" duration="00:00:05.4246196" startTime="2013-06-13T17:30:26.0580404+02:00" endTime="2013-06-13T17:30:32.1349804+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3ef48edb-95b7-4c30-a6fd-b6d573ec961e">
      <Output>
        <StdOut>Starting NH Session
NHibernate: INSERT INTO Reservations (IpAddress, HotelId, HotelName, HotelAddress, HotelPhoneNumber, HotelEmail, Arrival, Departure, CurrencySymbol, Firstname, Lastname, PhoneNumber, Country, Email, CreditCardHolder, CreditCardNumber, CreditCardMonth, CreditCardYear, CreditCardCvc, Type, Created, Modified, Cancelled, CustomerId) VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23); select SCOPE_IDENTITY();@p0 = '10.0.0.1' [Type: String (4000)], @p1 = 1 [Type: Int32 (0)], @p2 = '' [Type: String (4000)], @p3 = '' [Type: String (4000)], @p4 = '' [Type: String (4000)], @p5 = '' [Type: String (4000)], @p6 = 13-06-2013 17:30:31 [Type: DateTime (0)], @p7 = 19-06-2013 17:30:31 [Type: DateTime (0)], @p8 = 'DKK' [Type: String (4000)], @p9 = NULL [Type: String (4000)], @p10 = NULL [Type: String (4000)], @p11 = NULL [Type: String (4000)], @p12 = NULL [Type: String (4000)], @p13 = NULL [Type: String (4000)], @p14 = '' [Type: String (4000)], @p15 = '' [Type: String (4000)], @p16 = '' [Type: String (4000)], @p17 = '' [Type: String (4000)], @p18 = '' [Type: String (4000)], @p19 = 0 [Type: Int32 (0)], @p20 = 13-06-2013 17:30:31 [Type: DateTime (0)], @p21 = NULL [Type: DateTime (0)], @p22 = NULL [Type: DateTime (0)], @p23 = NULL [Type: Int32 (0)]
Ending NH Session
NHibernate: INSERT INTO ReservationItems (RoomTypeId, Description, GuestName, Adults, Children, Babies, Type, ReservationId) VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7); select SCOPE_IDENTITY();@p0 = 1 [Type: Int32 (0)], @p1 = 'Single Room' [Type: String (4000)], @p2 = 'John Doe' [Type: String (4000)], @p3 = 2 [Type: Int32 (0)], @p4 = 0 [Type: Int32 (0)], @p5 = 0 [Type: Int32 (0)], @p6 = 0 [Type: Int32 (0)], @p7 = NULL [Type: Int32 (0)]</StdOut>
        <DebugTrace>SessionScope Initializing...
SessionScope BeginTransaction
SessionScope EndTransaction
could not insert: [EcoHotels.Core.Domain.Models.Commerce.ReservationItem][SQL: INSERT INTO ReservationItems (RoomTypeId, Description, GuestName, Adults, Children, Babies, Type, ReservationId) VALUES (?, ?, ?, ?, ?, ?, ?, ?); select SCOPE_IDENTITY()]
</DebugTrace>
        <ErrorInfo>
          <Message>Test method EcoHotels.Core.Tests.Integration.Services.SearchServiceTester.TestMethod3 threw exception: 
NHibernate.Exceptions.GenericADOException: could not insert: [EcoHotels.Core.Domain.Models.Commerce.Reservation][SQL: INSERT INTO Reservations (IpAddress, HotelId, HotelName, HotelAddress, HotelPhoneNumber, HotelEmail, Arrival, Departure, CurrencySymbol, Firstname, Lastname, PhoneNumber, Country, Email, CreditCardHolder, CreditCardNumber, CreditCardMonth, CreditCardYear, CreditCardCvc, Type, Created, Modified, Cancelled, CustomerId) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); select SCOPE_IDENTITY()] ---&gt; System.Data.SqlClient.SqlException: Cannot insert the value NULL into column 'Firstname', table 'EcoHotels.dbo.Reservations'; column does not allow nulls. INSERT fails.
The statement has been terminated.</Message>
          <StackTrace>    at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
   at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at System.Data.SqlClient.SqlDataReader.ConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   at NHibernate.Id.IdentityGenerator.InsertSelectDelegate.ExecuteAndExtract(IDbCommand insert, ISessionImplementor session)
   at NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
 --- End of inner exception stack trace ---
    at NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
   at NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Boolean[] notNull, SqlCommandInfo sql, Object obj, ISessionImplementor session)
   at NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Object obj, ISessionImplementor session)
   at NHibernate.Action.EntityIdentityInsertAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Event.Default.AbstractSaveEventListener.PerformSaveOrReplicate(Object entity, EntityKey key, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   at NHibernate.Event.Default.AbstractSaveEventListener.PerformSave(Object entity, Object id, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   at NHibernate.Event.Default.AbstractSaveEventListener.SaveWithGeneratedId(Object entity, String entityName, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.SaveWithGeneratedOrRequestedId(SaveOrUpdateEvent event)
   at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsTransient(SaveOrUpdateEvent event)
   at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
   at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
   at NHibernate.Impl.SessionImpl.FireSaveOrUpdate(SaveOrUpdateEvent event)
   at NHibernate.Impl.SessionImpl.SaveOrUpdate(Object obj)
   at EcoHotels.Core.Infrastructure.NH.Repository`1.Save(T item) in C:\SourceCode\EcoHotels\EcoHotels.Core\Infrastructure\NH\Repository.cs:line 162
   at EcoHotels.Core.Tests.Integration.Services.SearchServiceTester.TestMethod3() in C:\SourceCode\EcoHotels\EcoHotels.Core.Tests\Integration\Services\SearchServiceTester.cs:line 85
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>