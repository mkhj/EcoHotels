<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="520d7ec6-e9cc-4381-b8a3-7acdbfacb27d" name="Mark@MACPC 2012-12-19 13:07:47" runUser="MacPc\Mark" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="f45b0aff-07a5-4726-a4ce-984b897c8a14">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="Mark_MACPC 2012-12-19 13_07_47" />
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2012-12-19T13:07:47.6361986+01:00" queuing="2012-12-19T13:07:48.1590006+01:00" start="2012-12-19T13:07:48.7746366+01:00" finish="2012-12-19T13:07:57.6674299+01:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="TestMethod1" storage="c:\sourcecode\ecohotels\ecohotels.core.tests\bin\debug\ecohotels.core.tests.dll" id="ee7d34af-b578-71a3-226e-abbea2105eb7">
      <Execution timeOut="1800000" id="1032bbf7-aabe-4966-ba2a-717fc218d271" />
      <TestMethod codeBase="C:/SourceCode/EcoHotels/EcoHotels.Core.Tests/bin/Debug/EcoHotels.Core.Tests.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="EcoHotels.Core.Tests.Install.SearchTagCitiyTester, EcoHotels.Core.Tests, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="TestMethod1" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="ee7d34af-b578-71a3-226e-abbea2105eb7" executionId="1032bbf7-aabe-4966-ba2a-717fc218d271" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="1032bbf7-aabe-4966-ba2a-717fc218d271" testId="ee7d34af-b578-71a3-226e-abbea2105eb7" testName="TestMethod1" computerName="MACPC" duration="00:00:07.6791047" startTime="2012-12-19T13:07:49.3707286+01:00" endTime="2012-12-19T13:07:57.5501779+01:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1032bbf7-aabe-4966-ba2a-717fc218d271">
      <Output>
        <StdOut>NHibernate: SELECT country0_.Id as Id4_0_, country0_.Name as Name4_0_, country0_.[Alpha-2 code] as column3_4_0_, country0_.CurrencyId as CurrencyId4_0_, country0_.LanguageId as LanguageId4_0_ FROM Countries country0_ WHERE country0_.Id=@p0;@p0 = 61 [Type: Int32 (0)]
NHibernate: INSERT INTO SearchTagCities (Name, CountryId) VALUES (@p0, @p1); select SCOPE_IDENTITY();@p0 = 'Copenhagen' [Type: String (4000)], @p1 = 61 [Type: Int32 (0)]</StdOut>
        <DebugTrace>SessionScope Initializing...
SessionScope BeginTransaction
SessionScope EndTransaction
null id in EcoHotels.Core.Domain.Models.Tags.SearchTagCity entry (don't flush the Session after an exception occurs)
</DebugTrace>
        <ErrorInfo>
          <Message>Test method EcoHotels.Core.Tests.Install.SearchTagCitiyTester.TestMethod1 threw exception: 
NHibernate.Exceptions.GenericADOException: could not insert: [EcoHotels.Core.Domain.Models.Tags.SearchTagCity][SQL: INSERT INTO SearchTagCities (Name, CountryId) VALUES (?, ?); select SCOPE_IDENTITY()] ---&gt; System.Data.SqlClient.SqlException: Cannot insert the value NULL into column 'Id', table 'EcoHotels.dbo.SearchTagCities'; column does not allow nulls. INSERT fails.
The statement has been terminated.</Message>
          <StackTrace>    at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning()
   at System.Data.SqlClient.TdsParser.Run(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj)
   at System.Data.SqlClient.SqlDataReader.ConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.System.Data.IDbCommand.ExecuteReader()
   at NHibernate.AdoNet.AbstractBatcher.ExecuteReader(IDbCommand cmd)
   at NHibernate.Id.IdentityGenerator.InsertSelectDelegate.ExecuteAndExtract(IDbCommand insert, ISessionImplementor session)
   at NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
 --- End of inner exception stack trace ---
    at NHibernate.Id.Insert.AbstractReturningDelegate.PerformInsert(SqlCommandInfo insertSQL, ISessionImplementor session, IBinder binder)
   at NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Boolean[] notNull, SqlCommandInfo sql, Object obj, ISessionImplementor session)
   at NHibernate.Persister.Entity.AbstractEntityPersister.Insert(Object[] fields, Object obj, ISessionImplementor session)
   at NHibernate.Action.EntityIdentityInsertAction.Execute()
   at NHibernate.Engine.ActionQueue.Execute(IExecutable executable)
   at NHibernate.Event.Default.AbstractSaveEventListener.PerformSaveOrReplicate(Object entity, EntityKey key, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   at NHibernate.Event.Default.AbstractSaveEventListener.PerformSave(Object entity, Object id, IEntityPersister persister, Boolean useIdentityColumn, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   at NHibernate.Event.Default.AbstractSaveEventListener.SaveWithGeneratedId(Object entity, String entityName, Object anything, IEventSource source, Boolean requiresImmediateIdAccess)
   at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.SaveWithGeneratedOrRequestedId(SaveOrUpdateEvent event)
   at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.EntityIsTransient(SaveOrUpdateEvent event)
   at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.PerformSaveOrUpdate(SaveOrUpdateEvent event)
   at NHibernate.Event.Default.DefaultSaveOrUpdateEventListener.OnSaveOrUpdate(SaveOrUpdateEvent event)
   at NHibernate.Impl.SessionImpl.FireSaveOrUpdate(SaveOrUpdateEvent event)
   at NHibernate.Impl.SessionImpl.SaveOrUpdate(Object obj)
   at EcoHotels.Core.Infrastructure.Repositories.NH.RepositoryBase`1.Save(T item) in C:\SourceCode\EcoHotels\EcoHotels.Core\Infrastructure\Repositories\NH\RepositoryBase.cs:line 163
   at EcoHotels.Core.Tests.Install.SearchTagCitiyTester.TestMethod1() in C:\SourceCode\EcoHotels\EcoHotels.Core.Tests\Install\SearchTagCitiyTester.cs:line 40
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>